<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 연결할 mapper의 interface 풀 경로 작성 -->
<mapper namespace="com.gogo.mapper.mypageMapper">
	<!--  ▶▶▶  admin ▶▶▶ -->
	<!-- 숙소 관리 -->
	<select id="getList" resultType="com.gogo.vo.StayVO">
		select stayNo, stayname, memberId, stayInfo, mainpic1 from stay
	</select>
	
	<!-- 사용자 관리 -->
	<select id="getMember" resultType="com.gogo.vo.MemberVO">
		SELECT memberid, membername, memberemail,
			TO_CHAR(registraiondate, 'YYYY-MM-DD') AS registraiondate
		FROM member
	</select>
	
	<!-- 통계 -->
	<select id="chartAge" resultType="com.gogo.vo.MemberVO">
		SELECT 
		  CASE 
		    WHEN EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM birthday) + 1 BETWEEN 20 AND 29 THEN '20대'
		    WHEN EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM birthday) + 1 BETWEEN 30 AND 39 THEN '30대'
		    ELSE '40대 이상'
		  END AS age_group,
		  COUNT(*) AS count
		FROM member m
		JOIN reservation v ON v.memberid = m.memberid
		GROUP BY 
		  CASE 
		    WHEN EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM birthday) + 1 BETWEEN 20 AND 29 THEN '20대'
		    WHEN EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM birthday) + 1 BETWEEN 30 AND 39 THEN '30대'
		    ELSE '40대 이상'
		  END
	</select>
	
	<!--  ▶▶▶  host ▶▶▶ -->
	<!-- 숙소 관리 -->
	<select id="getStay" resultType="java.util.Map">
	<!-- 나중에 where 절 삭제하고 session id 값과 비교  -->
		SELECT s.stayname, s.stayloc, s.stayadress, s.staytype, s.mainpic1, s.memberid
		FROM stay s, room r, reservation v, member m
		where s.stayno = r.stayno
			and r.roomno = v.roomno
			and v.memberid = m.memberid
	</select>
	
	<resultMap type="java.util.HashMap" id="getMap">
	    <result property="stayName" column="STAYNAME" />
	    <result property="stayLoc" column="STAYLOC" />
	    <result property="stayAdress" column="STAYADRESS" />
	    <result property="stayType" column="STAYTYPE" />
	    <result property="mainPic1" column="MAINPIC1" />
	    <result property="memberId" column="MEMBERID" />
	</resultMap>
	
	<!-- 예약 관리 -->
	<select id="reservinfo" resultType="java.util.Map">
	<!-- 회원 아이디와 비교해서 해당 -> 출력 -->
		SELECT
		      v.roomno,
		      v.memberid AS reservationMemberId,
              s.memberid AS stayMemberId,
		      TO_CHAR(regdate, 'YY-MM-DD') AS regdate,
		      TO_CHAR(checkin, 'YY-MM-DD') AS checkin,
		      TO_CHAR(checkout, 'YY-MM-DD') AS checkout,
		      membercount
	    FROM reservation v, room r, stay s
        where v.roomno = r.roomno
        and r.stayno = s.stayno
	</select>
	
	<resultMap type="java.util.HashMap" id="reserv_Map">
	    <result property="roomNo" column="ROOMNO" />
	    <result property="reservationMemberId" column="RESERVATIONMEMBERID" />
	    <result property="stayMemberId" column="STAYMEMBERID" />
	    <result property="regDate" column="REGDATE" />
	    <result property="checkIn" column="CHECKIN" />
	    <result property="checkOut" column="CHECKOUT" />
	</resultMap>
	
	<!-- 예약 관리 숙소 대표 사진 -->
	<resultMap type="map" id="stayMap">
	    <result property="stayName" column="STAYNAME" />
	    <result property="mainPic1" column="MAINPIC1" />
	    <result property="roomNo" column="ROOMNO" />
	</resultMap>
	
	 <select id="reservpic" resultMap="stayMap">
	    SELECT s.STAYNAME, s.MAINPIC1, r.ROOMNO
	    FROM STAY s
	    JOIN ROOM r ON s.STAYNO = r.STAYNO
	    JOIN RESERVATION v ON r.ROOMNO = v.ROOMNO
	</select>  
	
	<!-- 가이드 문의 요청 -->
	<insert id="insert">
		<selectKey keyProperty="queNo" order="BEFORE" resultType="int">
			select QUESEQ.nextval from dual
		</selectKey>
	
		insert into question (queNo, memberId, title, content, contentDate) 
		values (#{queNo}, #{memberId}, #{title}, #{content}, sysdate)
	</insert>

	<!-- 문의 list 출력 -->
	<select id="qaList" resultType="com.gogo.vo.QuestionVO">
	<!-- 회원 아이디와 비교해서 해당 -> 출력 -->
		select queno, title, content, to_char(contentdate, 'yy-mm-dd') as contentdate from question
	</select>

	<!-- 문의 한건 출력 -->
	<select id="getOne" resultType="com.gogo.vo.QuestionVO">
	<!-- 회원 아이디와 비교해서 해당 -> 출력 -->
		select queNo, title, content from question where queNo = #{queNo}
	</select>
	
	
	<!--  ▶▶▶  user ▶▶▶ -->
	<!-- 예약 정보 -->
	<select id="reservList" resultType="java.util.Map">
		SELECT
		    s.mainpic1,
		    s.stayname,
		    s.stayno,
		    r.price,
		    v.reservationno,
		    TO_CHAR(v.regdate, 'yyyy-mm-dd') as regdate,
		    TO_CHAR(v.checkin, 'yyyy-mm-dd') as checkin,
		    TO_CHAR(v.checkout, 'yyyy-mm-dd') as checkout,
		    v.membercount,
		    m.memberid
		FROM
		    stay s,
		    room r,
		    reservation v,
		    member m,
		    payment p
		WHERE
		    s.stayno = r.stayno
		    AND r.roomno = v.roomno
		    and v.reservationNo = p.reservationNo
		    And v.memberid = m.memberid
			and p.cancleYN = 'N'
		order by v.regdate desc		    
	</select>
	
	<resultMap type="java.util.HashMap" id="reservMap">
	    <result property="stayName" column="stayname" />
	    <result property="mainPic1" column="MAINPIC1" />
	    <result property="price" column="PRICE" />
	    <result property="regDate" column="REGDATE" />
	    <result property="checkIn" column="CHECKIN" />
	    <result property="checkOut" column="CHECKOUT" />
	    <result property="memberCount" column="MEMBERCOUNT" />
	    <result property="memberId" column="MEMBERID" />
	</resultMap>
	
	<!-- 취소 정보 -->
	<select id="cancelList" resultType="java.util.Map">
		select s.stayname, s.mainpic1, s.stayno, v.reservationno, r.price,
			TO_CHAR(v.checkin, 'yyyy-mm-dd') as checkin,
		    TO_CHAR(v.checkout, 'yyyy-mm-dd') as checkout,
			v.membercount, m.memberid
		from refund f, payment p, reservation v, member m, room r, stay s
		where f.paymentno = p.paymentno
			and p.reservationno = v.reservationno
			and v.roomno = r.roomno
			and v.memberid = m.memberid
			and r.stayno = s.stayno
			and p.cancleyn = 'Y'
		order by v.regdate desc
	</select>
	
	<resultMap type="java.util.HashMap" id="cancelMap">
	    <result property="stayName" column="STAYNAME" />
	    <result property="mainPic1" column="MAINPIC1" />
	    <result property="checkIn" column="CHECKIN" />
	    <result property="checkOut" column="CHECKOUT" />
	    <result property="memberCount" column="MEMBERCOUNT" />
	    <result property="memberId" column="MEMBERID" />
	</resultMap>
	
	<!-- 회원 정보 조회 -->
	<select id="mem" resultType="com.gogo.vo.MemberVO">
		select memberid, membername, pw, memberemail from member
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="update">
		update member set memberemail = #{memberemail} , pw = #{pw} where memberid = #{memberid}
	</update>
	

	
</mapper>